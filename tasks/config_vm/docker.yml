---
- name: Install docker
  hosts: docker_group
#  gather_facts: no 
  become: True
  vars:
    src: "../../templates/docker/docker-compose.yml.j2"
    dst: "/tmp/docker-compose.yml"
    package_names:
      - docker
      - docker-compose
  tasks:

  - name: Wait for /var/lib/dpkg/lock-frontend to be released 
    ansible.builtin.shell: while lsof /var/lib/dpkg/lock-frontend ; do sleep 10; done;

  - name: "Check if {{ package_names }} is installed or not on Debian Linux family"
    ansible.builtin.command: dpkg-query -l "{{ item }}"
    loop: "{{ package_names }}"
    register: debian_package_check
    ignore_errors: true
    when: ansible_facts['os_family'] == "Debian"

  - name: Install Docker, Docker-compose
    ansible.builtin.apt: 
      name: 
       - docker
       - docker-compose 
      update_cache: true
      state: latest
#      only_upgrade: true
      lock_timeout: 120
    register: apt_res
    retries: 5
    until: apt_res is success
#    async: 60
#    poll: 60
    when: debian_package_check is failed
#    notify:
#    - Deploy Docker Compose stack

  - name: Create docker-compose.yml for "{{ ansible_play_batch }}"
    ansible.builtin.template:
      src: "{{ src }}"
      dest: "{{ dst }}"
      owner: root
      group: root
      mode: '1777'
    notify:
    - Deploy docker-compose.yml 


  handlers:
  - name: Deploy docker-compose.yml 
    community.docker.docker_compose:
      project_src: /tmp/
      files:
      - docker-compose.yml
#      - docker-compose.prod.yml
#    async: 60
#    poll: 60
